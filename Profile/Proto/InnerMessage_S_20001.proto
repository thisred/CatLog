syntax = "proto3";
// using 

package ET;

//ResponseType ObjectQueryResponse
message ObjectQueryRequest // IRequest
{
  int32 RpcId = 1;
  int64 Key = 2;
  int64 InstanceId = 3;
}

//ResponseType G2G_LockResponse
message G2G_LockRequest // IRequest
{
  int32 RpcId = 1;
  int64 Id = 2;
  string Address = 3;
}

message G2G_LockResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType G2G_LockReleaseResponse
message G2G_LockReleaseRequest // IRequest
{
  int32 RpcId = 1;
  int64 Id = 2;
  string Address = 3;
}

message G2G_LockReleaseResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType ObjectAddResponse
message ObjectAddRequest // IRequest
{
  int32 RpcId = 1;
  int32 Type = 2;
  int64 Key = 3;
  ActorId ActorId = 4;
}

message ObjectAddResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType ObjectLockResponse
message ObjectLockRequest // IRequest
{
  int32 RpcId = 1;
  int32 Type = 2;
  int64 Key = 3;
  ActorId ActorId = 4;
  int32 Time = 5;
}
message ObjectLockResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType ObjectUnLockResponse
message ObjectUnLockRequest // IRequest
{
  int32 RpcId = 1;
  int32 Type = 2;
  int64 Key = 3;
  ActorId OldActorId = 4;
  ActorId NewActorId = 5;
}
message ObjectUnLockResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType ObjectRemoveResponse
message ObjectRemoveRequest // IRequest
{
  int32 RpcId = 1;
  int32 Type = 2;
  int64 Key = 3;
}
message ObjectRemoveResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType ObjectGetResponse
message ObjectGetRequest // IRequest
{
  int32 RpcId = 1;
  int32 Type = 2;
  int64 Key = 3;
}
message ObjectGetResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
  int32 Type = 4;
  ActorId ActorId = 5;
}

//ResponseType G2R_GetLoginKey
message R2G_GetLoginKey // IRequest
{
  int32 RpcId = 1;
  string Account = 2;
}

message G2R_GetLoginKey // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
  int64 Key = 4;
  int64 GateId = 5;
}

message G2M_SessionDisconnect // ILocationMessage
{
  int32 RpcId = 1;
}

message ObjectQueryResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
  bytes Entity = 4;
}

//ResponseType M2M_UnitTransferResponse
message M2M_UnitTransferRequest // IRequest
{
  int32 RpcId = 1;
  ActorId OldActorId = 2;
  bytes Unit = 3;
  repeated bytes Entitys = 4;
}

message M2M_UnitTransferResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType L2G_LoginGame
message G2L_LoginGame // IRequest
{
  int32 RpcId = 1;
  int64 RoleId = 2;
  ActorId OldActorId = 3;
}

message L2G_LoginGame // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType M2L_EnterMap
message L2M_EnterMap // IRequest
{
  int32 RpcId = 1;
  int64 RoleId = 2;
}

message M2L_EnterMap // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType M2L_LeaveMap
message L2M_LeaveMap // IRequest
{
  int32 RpcId = 1;
  int64 RoleId = 2;
}

message M2L_LeaveMap // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//-------------------------------Cache---------------------------------------------------------------------------------

//ResponseType AddOrUpdateCacheResponse
message AddOrUpdateCacheRequest // IRequest
{
  int32 RpcId = 1;
  int32 Zone = 2;
  int64 RoleId = 3;
  map<string, bytes> EntityMap = 4;
}

message AddOrUpdateCacheResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
}

//ResponseType GetPlayerCacheResponse
message GetPlayerCacheRequest // IRequest
{
  int32 RpcId = 1;
  int32 Zone = 2;
  int64 RoleId = 3;
  repeated string DBNames = 4;
}

message GetPlayerCacheResponse // IResponse
{
  int32 RpcId = 1;
  int32 Error = 2;
  string Message = 3;
  map<string, bytes> EntityMap = 4;
}