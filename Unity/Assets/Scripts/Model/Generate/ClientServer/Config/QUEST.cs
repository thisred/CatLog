
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace ET
{
public sealed partial class QUEST : Luban.BeanBase
{
    public QUEST(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Title = _buf.ReadInt();
        Desc = _buf.ReadInt();
        Category = (QuestCategory)_buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);CategoryParam = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); CategoryParam.Add(_e0);}}
        Type = (QuestType)_buf.ReadInt();
        Nature = (QuestNature)_buf.ReadInt();
        RequireNum = _buf.ReadLong();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);MultiRound = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); MultiRound.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Param = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Param.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ParamString = new System.Collections.Generic.List<string>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { string _e0;  _e0 = _buf.ReadString(); ParamString.Add(_e0);}}
        AutoAdd = _buf.ReadBool();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);PreIds = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); PreIds.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);NextIds = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); NextIds.Add(_e0);}}
        InheritProgress = _buf.ReadBool();
        PlayerLvLimit = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Conditions = new System.Collections.Generic.List<int>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { int _e0;  _e0 = _buf.ReadInt(); Conditions.Add(_e0);}}
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Reward = new System.Collections.Generic.List<Award>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { Award _e0;  _e0 = global::ET.Award.DeserializeAward(_buf); Reward.Add(_e0);}}
        Liveness = _buf.ReadInt();
        GetAwardsInstantly = _buf.ReadBool();
        PostInit();
    }

    public static QUEST DeserializeQUEST(ByteBuf _buf)
    {
        return new QUEST(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 任务标题[Text]
    /// </summary>
    public readonly int Title;
    /// <summary>
    /// 任务描述，不填会取QuestDesc中的默认描述，如果有特定需要则填[Text]
    /// </summary>
    public readonly int Desc;
    /// <summary>
    /// 任务类别
    /// </summary>
    public readonly QuestCategory Category;
    /// <summary>
    /// 类别参数，需要和程序确定参数含义
    /// </summary>
    public readonly System.Collections.Generic.List<int> CategoryParam;
    /// <summary>
    /// 任务类型，有什么类型具体看enum.xlsx
    /// </summary>
    public readonly QuestType Type;
    /// <summary>
    /// 任务性质
    /// </summary>
    public readonly QuestNature Nature;
    /// <summary>
    /// 要求数量，最小值1
    /// </summary>
    public readonly long RequireNum;
    /// <summary>
    /// 每轮计数，与RequireNum互斥
    /// </summary>
    public readonly System.Collections.Generic.List<int> MultiRound;
    /// <summary>
    /// 任务完成参数，需要和程序确定参数含义
    /// </summary>
    public readonly System.Collections.Generic.List<int> Param;
    /// <summary>
    /// 任务完成字符串参数
    /// </summary>
    public readonly System.Collections.Generic.List<string> ParamString;
    /// <summary>
    /// 是否默认加载玩&#183;````家身上
    /// </summary>
    public readonly bool AutoAdd;
    /// <summary>
    /// 前置任务，这些任务完成后，此任务才会加到玩家身上
    /// </summary>
    public readonly System.Collections.Generic.List<int> PreIds;
    /// <summary>
    /// 后置任务，此任务完成后加到玩家身上的任务id列表
    /// </summary>
    public readonly System.Collections.Generic.List<int> NextIds;
    /// <summary>
    /// 继承前置任务进度
    /// </summary>
    public readonly bool InheritProgress;
    /// <summary>
    /// 玩家等级限制
    /// </summary>
    public readonly int PlayerLvLimit;
    /// <summary>
    /// 解锁条件
    /// </summary>
    public readonly System.Collections.Generic.List<int> Conditions;
    /// <summary>
    /// 任务奖励;如果是多轮任务;此处是每轮奖励
    /// </summary>
    public readonly System.Collections.Generic.List<Award> Reward;
    /// <summary>
    /// 积分
    /// </summary>
    public readonly int Liveness;
    /// <summary>
    /// 可以立刻获得奖励不用领取
    /// </summary>
    public readonly bool GetAwardsInstantly;
   
    public const int __ID__ = 77406402;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        foreach (var _e in Reward) { _e?.ResolveRef(tables); }
        
        
        PostResolve();
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Title:" + Title + ","
        + "Desc:" + Desc + ","
        + "Category:" + Category + ","
        + "CategoryParam:" + Luban.StringUtil.CollectionToString(CategoryParam) + ","
        + "Type:" + Type + ","
        + "Nature:" + Nature + ","
        + "RequireNum:" + RequireNum + ","
        + "MultiRound:" + Luban.StringUtil.CollectionToString(MultiRound) + ","
        + "Param:" + Luban.StringUtil.CollectionToString(Param) + ","
        + "ParamString:" + Luban.StringUtil.CollectionToString(ParamString) + ","
        + "AutoAdd:" + AutoAdd + ","
        + "PreIds:" + Luban.StringUtil.CollectionToString(PreIds) + ","
        + "NextIds:" + Luban.StringUtil.CollectionToString(NextIds) + ","
        + "InheritProgress:" + InheritProgress + ","
        + "PlayerLvLimit:" + PlayerLvLimit + ","
        + "Conditions:" + Luban.StringUtil.CollectionToString(Conditions) + ","
        + "Reward:" + Luban.StringUtil.CollectionToString(Reward) + ","
        + "Liveness:" + Liveness + ","
        + "GetAwardsInstantly:" + GetAwardsInstantly + ","
        + "}";
    }

    partial void PostInit();
    partial void PostResolve();
}

}
