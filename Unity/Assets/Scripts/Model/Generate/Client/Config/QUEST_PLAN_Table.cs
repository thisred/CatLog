
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace ET
{
[Config]
public partial class QUEST_PLAN_Table: Singleton<QUEST_PLAN_Table>
{
    private readonly System.Collections.Generic.List<QUEST_PLAN> _dataList;

    private System.Collections.Generic.Dictionary<(int, QuestCategory), QUEST_PLAN> _dataMapUnion;

    public QUEST_PLAN_Table(ByteBuf _buf)
    {
        _dataList = new System.Collections.Generic.List<QUEST_PLAN>();
        
        for(int n = _buf.ReadSize() ; n > 0 ; --n)
        {
            QUEST_PLAN _v;
            _v = global::ET.QUEST_PLAN.DeserializeQUEST_PLAN(_buf);
            _dataList.Add(_v);
        }
        _dataMapUnion = new System.Collections.Generic.Dictionary<(int, QuestCategory), QUEST_PLAN>();
        foreach(var _v in _dataList)
        {
            _dataMapUnion.Add((_v.Id, _v.Category), _v);
        }
        PostInit();
    }

    public System.Collections.Generic.List<QUEST_PLAN> DataList => _dataList;

    public QUEST_PLAN Get(int Id, QuestCategory Category) => _dataMapUnion.TryGetValue((Id, Category), out QUEST_PLAN __v) ? __v : null;
    
    public void ResolveRef(Tables tables)
    {
        foreach(var _v in _dataList)
        {
            _v.ResolveRef(tables);
        }
        PostResolve();
    }
    partial void PostInit();
    partial void PostResolve();
}

}
